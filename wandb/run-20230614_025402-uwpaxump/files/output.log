Training with WES datasets --- Window size = 16
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21]
219477 219477
(197529, 5, 33, 3) (197529, 3)
(21948, 5, 33, 3) (21948, 3)
(896, 5, 33, 3) (896, 3)
Balanced weights: [0.14904647 0.19026911 0.32735109]
Config: {'batch_size': 32, 'shuffle': True, 'num_workers': 3}
100
Training infor:
 - epoch: 100
 - Leanring rate: 0.001
 - Learning rate scheduler: True
 - Early stopping: False
[INFO] training the network...
/usr/lib/python3/dist-packages/sklearn/utils/multiclass.py:141: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  y = np.asarray(y)
/usr/lib/python3/dist-packages/sklearn/utils/multiclass.py:141: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  y = np.asarray(y)
/usr/lib/python3/dist-packages/sklearn/utils/multiclass.py:254: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  y = np.asarray(y)
/usr/lib/python3/dist-packages/sklearn/utils/multiclass.py:254: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  y = np.asarray(y)
Traceback (most recent call last):
  File "/media/data/huyennm/ML/training_wes_copy.py", line 242, in <module>
    f1_micro = metrics.f1_score(y_true=truth, y_pred=pred, average='micro')
  File "/usr/lib/python3/dist-packages/sklearn/utils/validation.py", line 72, in inner_f
    return f(**kwargs)
  File "/usr/lib/python3/dist-packages/sklearn/metrics/_classification.py", line 1044, in f1_score
    return fbeta_score(y_true, y_pred, beta=1, labels=labels,
  File "/usr/lib/python3/dist-packages/sklearn/utils/validation.py", line 72, in inner_f
    return f(**kwargs)
  File "/usr/lib/python3/dist-packages/sklearn/metrics/_classification.py", line 1168, in fbeta_score
    _, _, f, _ = precision_recall_fscore_support(y_true, y_pred,
  File "/usr/lib/python3/dist-packages/sklearn/utils/validation.py", line 72, in inner_f
    return f(**kwargs)
  File "/usr/lib/python3/dist-packages/sklearn/metrics/_classification.py", line 1433, in precision_recall_fscore_support
    labels = _check_set_wise_labels(y_true, y_pred, average, labels,
  File "/usr/lib/python3/dist-packages/sklearn/metrics/_classification.py", line 1250, in _check_set_wise_labels
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/usr/lib/python3/dist-packages/sklearn/metrics/_classification.py", line 98, in _check_targets
    raise ValueError("{0} is not supported".format(y_type))
ValueError: unknown is not supported
Traceback (most recent call last):
  File "/media/data/huyennm/ML/training_wes_copy.py", line 242, in <module>
    f1_micro = metrics.f1_score(y_true=truth, y_pred=pred, average='micro')
  File "/usr/lib/python3/dist-packages/sklearn/utils/validation.py", line 72, in inner_f
    return f(**kwargs)
  File "/usr/lib/python3/dist-packages/sklearn/metrics/_classification.py", line 1044, in f1_score
    return fbeta_score(y_true, y_pred, beta=1, labels=labels,
  File "/usr/lib/python3/dist-packages/sklearn/utils/validation.py", line 72, in inner_f
    return f(**kwargs)
  File "/usr/lib/python3/dist-packages/sklearn/metrics/_classification.py", line 1168, in fbeta_score
    _, _, f, _ = precision_recall_fscore_support(y_true, y_pred,
  File "/usr/lib/python3/dist-packages/sklearn/utils/validation.py", line 72, in inner_f
    return f(**kwargs)
  File "/usr/lib/python3/dist-packages/sklearn/metrics/_classification.py", line 1433, in precision_recall_fscore_support
    labels = _check_set_wise_labels(y_true, y_pred, average, labels,
  File "/usr/lib/python3/dist-packages/sklearn/metrics/_classification.py", line 1250, in _check_set_wise_labels
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/usr/lib/python3/dist-packages/sklearn/metrics/_classification.py", line 98, in _check_targets
    raise ValueError("{0} is not supported".format(y_type))
ValueError: unknown is not supported